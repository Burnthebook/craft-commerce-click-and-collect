{#
/**
 * Click and Collect plugin for Craft CMS 4.x
 * Tailwind Version for use with Default Commerce Templates
 *
 * Add drop in Click and Collect functionality to Craft Commerce.
 *
 * @link        https://burnthebook.co.uk
 * @author      Michael Burton <mikey@burnthebook.co.uk>
 * @since       0.1.5
 * @copyright   Copyright (c) 2022 burnthebook
 */
#}

<div class="p-4 bg-gray-100 rounded-md" id="collection-form">
    <h3 class="text-lg font-semibold mb-4 js-title">Find a collection point</h3>

    <form method="post" class="flex items-center space-x-4 js-search-form" id="find-collection-points">
        <div class="flex-1">
            <label for="postcode" class="block text-sm font-medium text-gray-700 pb-3">Enter a postcode, town, or shop name</label>
            <input
                type="text"
                id="postcode"
                placeholder="Postcode"
                class="block w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-300 js-postcode-input"
            >
        </div>
        <button
            type="submit"
            id="search-button"
            class="px-4 py-2 mt-8 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring focus:ring-blue-300 js-search-button"
        >
            Search
        </button>
    </form>

    <form method="post" class="mt-6 space-y-4">
        {{ csrfInput() }}
        {{ actionInput('commerce/cart/update-cart') }}
        {{ redirectInput('/shop/checkout/payment-method') }}
        {{ hiddenInput('shippingMethodHandle', 'clickAndCollect') }}
        <div id="collection-points-error-container" class="text-red-600 text-sm js-error-container"></div>
        <div id="collection-points-container" class="js-collection-points-container"></div>
    </form>
</div>

<script>
    const findCollectionPointsForm = document.querySelector('.js-search-form');

    findCollectionPointsForm.addEventListener('submit', function(e) {
        e.preventDefault();

        const postcode = document.querySelector('.js-postcode-input').value;

        fetch('/actions/craft-commerce-click-and-collect/collection/find-collection-points', {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                'X-CSRF-Token': '{{ csrfToken }}'
            },
            body: JSON.stringify({ postcode: postcode })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`Sorry, there was an error fetching the collection points. Please check your postcode and try again!`);
            }
            return response.json();
        })
        .then(data => {
            const html = renderCollectionPoints(data, postcode);
            document.querySelector('.js-collection-points-container').innerHTML = html;
        })
        .catch(error => {
            console.error('Error fetching collection points:', error);
            document.querySelector('.js-error-container').textContent = error;
        });
    });

    function renderCollectionPoints(collectionPoints, postcode) {
        let html = '';

        if (collectionPoints instanceof Array) {
            document.querySelector('.js-error-container').textContent = '';
        
            const searchContainer = document.querySelector('.js-search-form');
            searchContainer.classList.add('hidden');

            const searchContainerTitle = document.querySelector('.js-title');
            searchContainerTitle.textContent = `Collection Points close to ${postcode}`;

            html = `
                <div class="space-y-4">
            `;

            collectionPoints.forEach(point => {
                const firstCollectionTime = point.firstCollectionTime;
                let firstOpeningTime = '';
                let dateString = '';
                let timeString = '';

                if (firstCollectionTime) {
                    const availableTime = new Date(firstCollectionTime);
                    timeString = availableTime.toLocaleTimeString([], { hour: 'numeric', hour12: true }).replace(' ', '');
                    const dayOfWeek = availableTime.toLocaleDateString([], { weekday: 'long' });
                    const day = availableTime.getDate();
                    const month = availableTime.toLocaleDateString([], { month: 'long' });
                    const ordinalSuffix = (day) => {
                        if (day > 3 && day < 21) return 'th';
                        switch (day % 10) {
                            case 1: return 'st';
                            case 2: return 'nd';
                            case 3: return 'rd';
                            default: return 'th';
                        }
                    };
                    dateString = `${dayOfWeek} ${day}${ordinalSuffix(day)} ${month}`;
                    firstOpeningTime = `${timeString} on ${dateString}`;
                }

                const address = point.craft_address;

                // Collection Point
                html += `
                    <div class="border rounded-lg p-4 bg-white shadow flex" data-point-id="${point.id}">
                        <div class="flex flex-col space-y-2 w-4/5">
                            <h4 class="text-lg font-semibold">${point.name}</h4>
                            <p>${address.addressLine1}, ${address.locality}, ${address.postalCode}</p>
                            ${
                                firstCollectionTime
                                ? `<p>Collect from <b>${timeString}</b> on ${dateString} for <b>Free</b></p>`
                                : '<p><strong>Sorry, no collection times available.</strong></p>'
                            }
                            <a class="text-blue-600 hover:underline cursor-pointer js-map-link" data-clickcollect-modal="point_${point.id}">
                                Maps and opening times
                            </a>

                            <div class="hidden space-y-2 mt-4 js-collection-form" data-collection-form>
                                <input type="hidden" name="shippingAddress[titleName]" value="-" disabled>
                                <input type="hidden" name="shippingAddress[firstName]" value="${point.name}" disabled>
                                <input type="hidden" name="shippingAddress[lastName]" value="-" disabled>
                                <input type="hidden" name="shippingAddress[addressLine1]" value="${address.addressLine1}" disabled>
                                <input type="hidden" name="shippingAddress[addressLine2]" value="${address.addressLine2}" disabled>
                                <input type="hidden" name="shippingAddress[locality]" value="${address.locality}" disabled>
                                <input type="hidden" name="shippingAddress[administrativeArea]" value="${address.administrativeArea}" disabled>
                                <input type="hidden" name="shippingAddress[postalCode]" value="${address.postalCode}" disabled>
                                <input type="hidden" name="shippingAddress[countryCode]" value="${address.countryCode}" disabled>
                                <input type="hidden" name="fields[btbCncCollectionPoint]" value="${point.name}" disabled>
                                <input type="hidden" name="fields[btbCncCollectionTime]" value="${firstOpeningTime}" disabled>

                                <label class="text-sm font-medium" for="mobileNumber_${point.id}">Mobile Number</label>
                                <input type="tel" id="mobileNumber_${point.id}" name="fields[btbCncMobileNumber]" placeholder="Enter your mobile number" class="w-full p-2 border border-gray-300 rounded-md" disabled required>

                                <div>
                                    <label class="inline-flex items-center cursor-pointer">
                                        <input type="hidden" name="fields[giftOption]" value="0" disabled>
                                        <input type="checkbox" id="giftOption_${point.id}" name="fields[giftOption]" value="0" class="mr-2 js-gift-checkbox" onclick="toggleGiftMessage(${point.id})">
                                        <span class="text-sm">Yes, this order is a gift (Prices will not be shown on the delivery note)</span>
                                    </label>
                                </div>

                                <div id="giftMessageBlock_${point.id}" class="hidden space-y-2 js-gift-message-block">
                                    <label class="text-sm font-medium" for="giftMessage_${point.id}">Add a gift message (optional)</label>
                                    <textarea name="fields[giftMessage]" id="giftMessage_${point.id}" class="w-full p-2 border border-gray-300 rounded-md" rows="2"></textarea>
                                    <p class="text-xs text-gray-500">This message will appear on the delivery note</p>
                                </div>

                                <button type="submit" class="w-full max-w-xs px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 cursor-pointer">Continue to payment</button>
                            </div>
                        </div>

                        <div class="flex flex-col items-end justify-between flex-grow">
                            <span class="text-sm text-gray-500">${point.distance.toFixed(2)} Miles</span>
                            ${
                                firstCollectionTime ? `
                                    <a class="mt-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring focus:ring-blue-300 cursor-pointer js-select-shop-link" data-clickcollect-shopselect="point_${point.id}">
                                        Select Shop
                                    </a>
                                ` : 
                                `
                                    <a class="mt-2 text-blue-600 hover:underline cursor-pointer">Change to Delivery</a>
                                `
                            }
                        </div>
                    </div>
                `;

                // Modal
                html += `
                    <div class="fixed inset-0 hidden bg-black bg-opacity-50 z-40 flex items-center justify-center js-modal" data-point-modal-id="point_${point.id}">
                        <div class="relative bg-white rounded-lg shadow-lg max-w-5xl w-full flex">
                            <!-- Close Button at Top Right -->
                            <a class="absolute top-2 right-2 text-2xl font-bold text-gray-500 cursor-pointer js-close-modal">&times;</a>

                            <!-- Left Section: Map (85% width, full height) -->
                            <div class="w-full">
                                <iframe class="w-full h-full rounded-l-lg" src="https://maps.google.com/maps?width=100%25&amp;height=500&amp;hl=en&amp;q=${address.addressLine1}, ${address.locality}, ${address.postalCode}&amp;t=&amp;z=14&amp;ie=UTF8&amp;iwloc=B&amp;output=embed" allowfullscreen loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
                            </div>
                            
                            <!-- Right Section: Collection Details (15% width) -->
                            <div class="w-15 flex flex-col p-3 space-y-2">
                                <p>Collect from <b>${timeString}</b> on ${dateString} for <b>Free</b></p>
                                <p class="font-semibold">${point.name}</p>
                                <p>${address.addressLine1}</p>
                                <p>${address.locality}</p>
                                <p>${address.postalCode}</p>
                                <div class="space-y-1">
                                    ${point.openingHours.map(hour => `<p>${hour}</p>`).join('')}
                                </div>
                                <a class="mt-4 px-4 py-2 bg-blue-600 text-white text-center rounded-md hover:bg-blue-700 focus:outline-none focus:ring focus:ring-blue-300 cursor-pointer js-select-shop-link" data-clickcollect-shopselect="point_${point.id}">
                                    Select Shop
                                </a>
                            </div>
                        </div>
                    </div>
                `;
            });
            html += `</div>`;
        } else {
            document.querySelector('.js-error-container').textContent = collectionPoints.message;
        }

        return html;
    }

    function selectShop(el) {
        const pointId = el.getAttribute('data-clickcollect-shopselect').split('_')[1];
        const optionContainer = document.querySelector(`[data-point-id="${pointId}"]`);
        const formContainer = optionContainer.querySelector('.js-collection-form');
        const searchContainerTitle = document.querySelector('.js-title');

        const isShopSelected = !formContainer.classList.contains('hidden');

        if (isShopSelected) {
            formContainer.classList.add('hidden');
            searchContainerTitle.textContent = 'Select a Collection Point';

            formContainer.querySelectorAll('input, select, textarea').forEach(input => {
                input.disabled = true;
            });

            const mobileNumberField = formContainer.querySelector('[type="tel"]');
            if (mobileNumberField) {
                mobileNumberField.removeAttribute('required');
            }

            el.textContent = 'Select Shop';
        } else {
            formContainer.classList.remove('hidden');
            searchContainerTitle.textContent = 'Selected Shop';

            formContainer.querySelectorAll('input, select, textarea').forEach(input => {
                input.disabled = false;
            });

            const mobileNumberField = formContainer.querySelector('[type="tel"]');
            if (mobileNumberField) {
                mobileNumberField.setAttribute('required', 'true');
            }

            el.textContent = 'Change Shop';
        }
    }

    function toggleGiftMessage(pointId) {
        const giftMessageBlock = document.getElementById(`giftMessageBlock_${pointId}`);
        const giftCheckbox = document.getElementById(`giftOption_${pointId}`);

        if (giftCheckbox.checked) {
            giftMessageBlock.classList.remove('hidden');
        } else {
            giftMessageBlock.classList.add('hidden');
        }
    }

    document.addEventListener('click', function (event) {
        if (event.target.matches('.js-select-shop-link')) {
            const el = event.target;
            selectShop(el);

            const modal = event.target.closest('[data-point-modal-id]');
            modal.classList.add('hidden');
        }

        if (event.target.matches('.js-map-link')) {
            const pointId = event.target.getAttribute('data-clickcollect-modal').split('_')[1];
            const modal = document.querySelector(`[data-point-modal-id="point_${pointId}"]`);
            modal.classList.remove('hidden');
        }

        if (event.target.matches('.js-close-modal')) {
            const modal = event.target.closest('[data-point-modal-id]');
            modal.classList.add('hidden');
        }
    });
</script>